<NestedFlow
    Layout="@CustomLayout"
    HeaderStack="@CustomHeaderStack"
    Header="@CustomHeader"
    HeaderSeparator="@CustomHeaderSeparator"
    Back="@CustomBack">
</NestedFlow>

@code {

    private RenderFragment<NavigationStack.LayoutContext> CustomLayout => context => {
        return @<div class="dark-layout">
                   <div class="dark-header">
                       <div class="header-left">
                           @context.BackButton
                           @context.HeaderStack
                       </div>
                       <div class="header-right">
                           @context.Menu
                       </div>
                   </div>
                   <div class="dark-content">
                       @context.Content
                   </div>
               </div>;
    };

    private RenderFragment<NavigationStack.HeaderStackContext> CustomHeaderStack => context => {
        return @<div class="header-stack">
                   @{
                       RenderFragment header = context.Headers.First();
                       <div class="header-item">
                           @header
                       </div>
                   }
               </div>;
    };

    private RenderFragment<NavigationStack.HeaderContext> CustomHeader => context => {
        return @<div class="@(context.IsActive ? "header-active" : "header-inactive")">
            @context.Name
        </div>;
    };

    private RenderFragment CustomHeaderSeparator => @<div class="separator-arrow">
        <span>→</span>
    </div>;
    

    private RenderFragment<NavigationStack.BackContext> CustomBack => context => {
        return @<button class="back-button" @onclick="context.Back">
            <span>◀</span> Back
        </button>;
    };

}